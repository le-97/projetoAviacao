# Production Dockerfile for Aviation Compliance API
FROM python:3.11-slim AS base

# Build arguments and labels
ARG BUILD_DATE
ARG VERSION=4.0.0
ARG VCS_REF

LABEL maintainer="Aviation Compliance Team"
LABEL org.opencontainers.image.title="Aviation Compliance API"
LABEL org.opencontainers.image.description="Production-ready FastAPI for Embraer E-Jets compliance"
LABEL org.opencontainers.image.version=$VERSION
LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.source="https://github.com/aviation-compliance/api"

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV ENVIRONMENT=production
ENV API_HOST=0.0.0.0
ENV API_PORT=8000
ENV PORT=8000
ENV WEBSITES_PORT=8000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app user for security
RUN groupadd -r appuser && useradd -r -g appuser -d /app appuser

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements-production.txt .
RUN pip install --no-cache-dir -r requirements-production.txt

# Copy application code
COPY --chown=appuser:appuser main_production.py ./
COPY --chown=appuser:appuser requirements-production.txt ./

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/temp && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app

# Health check for container orchestration
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Production startup command
CMD ["python", "-m", "uvicorn", "main_production:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1", "--access-log", "--log-level", "info"]