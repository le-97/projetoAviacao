window.jest_html_reporters_callback__({"numFailedTestSuites":4,"numFailedTests":6,"numPassedTestSuites":1,"numPassedTests":29,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":35,"startTime":1759980297833,"success":false,"testResults":[{"numFailingTests":1,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759980304558,"runtime":6360,"slow":true,"start":1759980298198},"testFilePath":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\integration\\analytics.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHealth Endpoints › GET / › should return API information\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"service\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"aircraft_models\": 7, \"documentation\": \"/docs\", \"health_check\": \"/health\", \"message\": \"Aviation Compliance API - Embraer E-Jets\", \"status\": \"operational\", \"supported_authorities\": [\"FAA\", \"EASA\", \"ANAC\", \"ICAO\"], \"version\": \"4.0.0\"}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 59 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'service'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'version'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'3.0.0'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'status'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'operational'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'aircraft_count'\u001b[39m\u001b[33m,\u001b[39m \u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveProperty (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/analytics.test.js\u001b[39m\u001b[0m\u001b[2m:59:29)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Health Endpoints","GET /health"],"duration":230,"failureMessages":[],"fullName":"Health Endpoints GET /health should return healthy status","status":"passed","title":"should return healthy status"},{"ancestorTitles":["Health Endpoints","GET /health"],"duration":185,"failureMessages":[],"fullName":"Health Endpoints GET /health should have correct response headers","status":"passed","title":"should have correct response headers"},{"ancestorTitles":["Health Endpoints","GET /health"],"duration":246,"failureMessages":[],"fullName":"Health Endpoints GET /health should respond within acceptable time","status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Health Endpoints","GET /"],"duration":155,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"service\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"aircraft_models\": 7, \"documentation\": \"/docs\", \"health_check\": \"/health\", \"message\": \"Aviation Compliance API - Embraer E-Jets\", \"status\": \"operational\", \"supported_authorities\": [\"FAA\", \"EASA\", \"ANAC\", \"ICAO\"], \"version\": \"4.0.0\"}\u001b[39m\n    at Object.toHaveProperty (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\integration\\analytics.test.js:59:29)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Health Endpoints GET / should return API information","status":"failed","title":"should return API information"},{"ancestorTitles":["Health Endpoints","Health Check Reliability"],"duration":458,"failureMessages":[],"fullName":"Health Endpoints Health Check Reliability should handle multiple concurrent requests","status":"passed","title":"should handle multiple concurrent requests"},{"ancestorTitles":["Health Endpoints","Health Check Reliability"],"duration":151,"failureMessages":[],"fullName":"Health Endpoints Health Check Reliability should maintain consistent response structure","status":"passed","title":"should maintain consistent response structure"}]},{"numFailingTests":1,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759980304560,"runtime":6364,"slow":true,"start":1759980298196},"testFilePath":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\integration\\health.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mHealth Endpoints › GET / › should return API information\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"service\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"aircraft_models\": 7, \"documentation\": \"/docs\", \"health_check\": \"/health\", \"message\": \"Aviation Compliance API - Embraer E-Jets\", \"status\": \"operational\", \"supported_authorities\": [\"FAA\", \"EASA\", \"ANAC\", \"ICAO\"], \"version\": \"4.0.0\"}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 59 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'service'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'version'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'3.0.0'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'status'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'operational'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 62 |\u001b[39m       expect(response\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'aircraft_count'\u001b[39m\u001b[33m,\u001b[39m \u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveProperty (\u001b[22m\u001b[2m\u001b[0m\u001b[36mintegration/health.test.js\u001b[39m\u001b[0m\u001b[2m:59:29)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Health Endpoints","GET /health"],"duration":229,"failureMessages":[],"fullName":"Health Endpoints GET /health should return healthy status","status":"passed","title":"should return healthy status"},{"ancestorTitles":["Health Endpoints","GET /health"],"duration":185,"failureMessages":[],"fullName":"Health Endpoints GET /health should have correct response headers","status":"passed","title":"should have correct response headers"},{"ancestorTitles":["Health Endpoints","GET /health"],"duration":244,"failureMessages":[],"fullName":"Health Endpoints GET /health should respond within acceptable time","status":"passed","title":"should respond within acceptable time"},{"ancestorTitles":["Health Endpoints","GET /"],"duration":150,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"service\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"aircraft_models\": 7, \"documentation\": \"/docs\", \"health_check\": \"/health\", \"message\": \"Aviation Compliance API - Embraer E-Jets\", \"status\": \"operational\", \"supported_authorities\": [\"FAA\", \"EASA\", \"ANAC\", \"ICAO\"], \"version\": \"4.0.0\"}\u001b[39m\n    at Object.toHaveProperty (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\integration\\health.test.js:59:29)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Health Endpoints GET / should return API information","status":"failed","title":"should return API information"},{"ancestorTitles":["Health Endpoints","Health Check Reliability"],"duration":463,"failureMessages":[],"fullName":"Health Endpoints Health Check Reliability should handle multiple concurrent requests","status":"passed","title":"should handle multiple concurrent requests"},{"ancestorTitles":["Health Endpoints","Health Check Reliability"],"duration":150,"failureMessages":[],"fullName":"Health Endpoints Health Check Reliability should maintain consistent response structure","status":"passed","title":"should maintain consistent response structure"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759980305509,"runtime":7287,"slow":true,"start":1759980298222},"testFilePath":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\integration\\aircraft.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/models"],"duration":228,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/models should return all aircraft models","status":"passed","title":"should return all aircraft models"},{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/models"],"duration":185,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/models should have consistent data structure","status":"passed","title":"should have consistent data structure"},{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/specifications/{model}"],"duration":247,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/specifications/{model} should return specifications for E170","status":"passed","title":"should return specifications for E170"},{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/specifications/{model}"],"duration":151,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/specifications/{model} should return specifications for E175-E2","status":"passed","title":"should return specifications for E175-E2"},{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/specifications/{model}"],"duration":148,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/specifications/{model} should return specifications for E190-E2","status":"passed","title":"should return specifications for E190-E2"},{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/specifications/{model}"],"duration":191,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/specifications/{model} should return 404 for invalid aircraft model","status":"passed","title":"should return 404 for invalid aircraft model"},{"ancestorTitles":["Aircraft Endpoints","GET /aircraft/specifications/{model}"],"duration":446,"failureMessages":[],"fullName":"Aircraft Endpoints GET /aircraft/specifications/{model} should validate E1 vs E2 differences","status":"passed","title":"should validate E1 vs E2 differences"},{"ancestorTitles":["Aircraft Endpoints","Aircraft Data Integrity"],"duration":188,"failureMessages":[],"fullName":"Aircraft Endpoints Aircraft Data Integrity should have consistent aircraft count across endpoints","status":"passed","title":"should have consistent aircraft count across endpoints"},{"ancestorTitles":["Aircraft Endpoints","Aircraft Data Integrity"],"duration":613,"failureMessages":[],"fullName":"Aircraft Endpoints Aircraft Data Integrity should have valid specifications for all models","status":"passed","title":"should have valid specifications for all models"}]},{"numFailingTests":4,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759980309188,"runtime":10992,"slow":true,"start":1759980298196},"testFilePath":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\contracts\\api-contracts.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Contract Tests › OpenAPI Specification › should have valid OpenAPI specification\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m3\u001b[27m.0.0\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27m.0.0\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       expect(openApiSpec\u001b[33m.\u001b[39minfo\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Aviation Compliance API - Embraer E-Jets'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 46 |\u001b[39m       expect(openApiSpec\u001b[33m.\u001b[39minfo\u001b[33m.\u001b[39mversion)\u001b[33m.\u001b[39mtoBe(\u001b[32m'3.0.0'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     test(\u001b[32m'should document all endpoints'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcontracts/api-contracts.test.js\u001b[39m\u001b[0m\u001b[2m:46:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Contract Tests › OpenAPI Specification › should document all endpoints\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"/compliance/check\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"/\": {\"get\": {\"description\": \"API root endpoint with basic information.\", \"operationId\": \"root__get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Root\", \"tags\": [\"Root\"]}}, \"/aircraft/models\": {\"get\": {\"description\": \"Get all available aircraft models.\", \"operationId\": \"get_aircraft_models_aircraft_models_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Get Aircraft Models\", \"tags\": [\"Aircraft\"]}}, \"/aircraft/specifications/{model}\": {\"get\": {\"description\": \"Get detailed specifications for a specific aircraft model.\", \"operationId\": \"get_aircraft_specifications_aircraft_specifications__model__get\", \"parameters\": [{\"in\": \"path\", \"name\": \"model\", \"required\": true, \"schema\": {\"title\": \"Model\", \"type\": \"string\"}}], \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/AircraftSpecification\"}}}, \"description\": \"Successful Response\"}, \"422\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}, \"description\": \"Validation Error\"}}, \"summary\": \"Get Aircraft Specifications\", \"tags\": [\"Aircraft\"]}}, \"/analytics/fleet-metrics\": {\"get\": {\"description\": \"Get fleet-wide analytics and metrics.\", \"operationId\": \"get_fleet_metrics_analytics_fleet_metrics_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Get Fleet Metrics\", \"tags\": [\"Analytics\"]}}, \"/compliance/authorities\": {\"get\": {\"description\": \"Get all supported compliance authorities and their information.\", \"operationId\": \"get_compliance_authorities_compliance_authorities_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Get Compliance Authorities\", \"tags\": [\"Compliance\"]}}, \"/compliance/check/{model}/{authority}\": {\"get\": {\"description\": \"Perform compliance check for an aircraft model against a specific authority.\", \"operationId\": \"check_compliance_compliance_check__model___authority__get\", \"parameters\": [{\"in\": \"path\", \"name\": \"model\", \"required\": true, \"schema\": {\"title\": \"Model\", \"type\": \"string\"}}, {\"in\": \"path\", \"name\": \"authority\", \"required\": true, \"schema\": {\"title\": \"Authority\", \"type\": \"string\"}}, {\"description\": \"Type of compliance check\", \"in\": \"query\", \"name\": \"check_type\", \"required\": false, \"schema\": {\"default\": \"full\", \"description\": \"Type of compliance check\", \"title\": \"Check Type\", \"type\": \"string\"}}], \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/ComplianceCheckResult\"}}}, \"description\": \"Successful Response\"}, \"422\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}, \"description\": \"Validation Error\"}}, \"summary\": \"Check Compliance\", \"tags\": [\"Compliance\"]}}, \"/health\": {\"get\": {\"description\": \"Health check endpoint for monitoring and load balancers.\", \"operationId\": \"health_check_health_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Health Check\", \"tags\": [\"Health\"]}}}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 64 |\u001b[39m       expectedPaths\u001b[33m.\u001b[39mforEach(path \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 65 |\u001b[39m         expect(openApiSpec\u001b[33m.\u001b[39mpaths)\u001b[33m.\u001b[39mtoHaveProperty(path)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat toHaveProperty (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcontracts/api-contracts.test.js\u001b[39m\u001b[0m\u001b[2m:65:35)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat Object.forEach (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcontracts/api-contracts.test.js\u001b[39m\u001b[0m\u001b[2m:64:21)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Contract Tests › Response Schema Validation › should validate health endpoint response\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 150 |\u001b[39m         console\u001b[33m.\u001b[39merror(\u001b[32m'Health validation errors:'\u001b[39m\u001b[33m,\u001b[39m validate\u001b[33m.\u001b[39merrors)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 151 |\u001b[39m       }\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 152 |\u001b[39m       expect(valid)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 153 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m     test(\u001b[32m'should validate aircraft models response'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcontracts/api-contracts.test.js\u001b[39m\u001b[0m\u001b[2m:152:21)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI Contract Tests › Error Response Validation › should validate validation error responses\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected value: \u001b[32m404\u001b[39m\n    Received array: \u001b[31m[400, 422]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 243 |\u001b[39m         fail(\u001b[32m'Should have thrown an error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 244 |\u001b[39m       } \u001b[36mcatch\u001b[39m (error) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 245 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(error\u001b[33m.\u001b[39mresponse\u001b[33m.\u001b[39mstatus)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 246 |\u001b[39m         \u001b[22m\n\u001b[2m     \u001b[90m 247 |\u001b[39m         \u001b[36mconst\u001b[39m validate \u001b[33m=\u001b[39m ajv\u001b[33m.\u001b[39mcompile(errorSchema)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 248 |\u001b[39m         \u001b[36mconst\u001b[39m valid \u001b[33m=\u001b[39m validate(error\u001b[33m.\u001b[39mresponse\u001b[33m.\u001b[39mdata)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[22m\u001b[2m\u001b[0m\u001b[36mcontracts/api-contracts.test.js\u001b[39m\u001b[0m\u001b[2m:245:28)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["API Contract Tests","OpenAPI Specification"],"duration":13,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m3\u001b[27m.0.0\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m.0.0\"\u001b[39m\n    at Object.toBe (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\contracts\\api-contracts.test.js:46:40)\n    at Promise.then.completed (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"API Contract Tests OpenAPI Specification should have valid OpenAPI specification","status":"failed","title":"should have valid OpenAPI specification"},{"ancestorTitles":["API Contract Tests","OpenAPI Specification"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"/compliance/check\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"/\": {\"get\": {\"description\": \"API root endpoint with basic information.\", \"operationId\": \"root__get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Root\", \"tags\": [\"Root\"]}}, \"/aircraft/models\": {\"get\": {\"description\": \"Get all available aircraft models.\", \"operationId\": \"get_aircraft_models_aircraft_models_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Get Aircraft Models\", \"tags\": [\"Aircraft\"]}}, \"/aircraft/specifications/{model}\": {\"get\": {\"description\": \"Get detailed specifications for a specific aircraft model.\", \"operationId\": \"get_aircraft_specifications_aircraft_specifications__model__get\", \"parameters\": [{\"in\": \"path\", \"name\": \"model\", \"required\": true, \"schema\": {\"title\": \"Model\", \"type\": \"string\"}}], \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/AircraftSpecification\"}}}, \"description\": \"Successful Response\"}, \"422\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}, \"description\": \"Validation Error\"}}, \"summary\": \"Get Aircraft Specifications\", \"tags\": [\"Aircraft\"]}}, \"/analytics/fleet-metrics\": {\"get\": {\"description\": \"Get fleet-wide analytics and metrics.\", \"operationId\": \"get_fleet_metrics_analytics_fleet_metrics_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Get Fleet Metrics\", \"tags\": [\"Analytics\"]}}, \"/compliance/authorities\": {\"get\": {\"description\": \"Get all supported compliance authorities and their information.\", \"operationId\": \"get_compliance_authorities_compliance_authorities_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Get Compliance Authorities\", \"tags\": [\"Compliance\"]}}, \"/compliance/check/{model}/{authority}\": {\"get\": {\"description\": \"Perform compliance check for an aircraft model against a specific authority.\", \"operationId\": \"check_compliance_compliance_check__model___authority__get\", \"parameters\": [{\"in\": \"path\", \"name\": \"model\", \"required\": true, \"schema\": {\"title\": \"Model\", \"type\": \"string\"}}, {\"in\": \"path\", \"name\": \"authority\", \"required\": true, \"schema\": {\"title\": \"Authority\", \"type\": \"string\"}}, {\"description\": \"Type of compliance check\", \"in\": \"query\", \"name\": \"check_type\", \"required\": false, \"schema\": {\"default\": \"full\", \"description\": \"Type of compliance check\", \"title\": \"Check Type\", \"type\": \"string\"}}], \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/ComplianceCheckResult\"}}}, \"description\": \"Successful Response\"}, \"422\": {\"content\": {\"application/json\": {\"schema\": {\"$ref\": \"#/components/schemas/HTTPValidationError\"}}}, \"description\": \"Validation Error\"}}, \"summary\": \"Check Compliance\", \"tags\": [\"Compliance\"]}}, \"/health\": {\"get\": {\"description\": \"Health check endpoint for monitoring and load balancers.\", \"operationId\": \"health_check_health_get\", \"responses\": {\"200\": {\"content\": {\"application/json\": {\"schema\": {}}}, \"description\": \"Successful Response\"}}, \"summary\": \"Health Check\", \"tags\": [\"Health\"]}}}\u001b[39m\n    at toHaveProperty (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\contracts\\api-contracts.test.js:65:35)\n    at Array.forEach (<anonymous>)\n    at Object.forEach (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\contracts\\api-contracts.test.js:64:21)\n    at Promise.then.completed (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"API Contract Tests OpenAPI Specification should document all endpoints","status":"failed","title":"should document all endpoints"},{"ancestorTitles":["API Contract Tests","Response Schema Validation"],"duration":191,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\contracts\\api-contracts.test.js:152:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"API Contract Tests Response Schema Validation should validate health endpoint response","status":"failed","title":"should validate health endpoint response"},{"ancestorTitles":["API Contract Tests","Response Schema Validation"],"duration":219,"failureMessages":[],"fullName":"API Contract Tests Response Schema Validation should validate aircraft models response","status":"passed","title":"should validate aircraft models response"},{"ancestorTitles":["API Contract Tests","Response Schema Validation"],"duration":153,"failureMessages":[],"fullName":"API Contract Tests Response Schema Validation should validate aircraft specifications response","status":"passed","title":"should validate aircraft specifications response"},{"ancestorTitles":["API Contract Tests","Response Schema Validation"],"duration":157,"failureMessages":[],"fullName":"API Contract Tests Response Schema Validation should validate compliance check response","status":"passed","title":"should validate compliance check response"},{"ancestorTitles":["API Contract Tests","Response Schema Validation"],"duration":1255,"failureMessages":[],"fullName":"API Contract Tests Response Schema Validation should validate all aircraft specifications","status":"passed","title":"should validate all aircraft specifications"},{"ancestorTitles":["API Contract Tests","Error Response Validation"],"duration":189,"failureMessages":[],"fullName":"API Contract Tests Error Response Validation should validate 404 error responses","status":"passed","title":"should validate 404 error responses"},{"ancestorTitles":["API Contract Tests","Error Response Validation"],"duration":147,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n    at Object.toContain (C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\contracts\\api-contracts.test.js:245:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"API Contract Tests Error Response Validation should validate validation error responses","status":"failed","title":"should validate validation error responses"},{"ancestorTitles":["API Contract Tests","API Consistency"],"duration":1466,"failureMessages":[],"fullName":"API Contract Tests API Consistency should have consistent aircraft model references","status":"passed","title":"should have consistent aircraft model references"},{"ancestorTitles":["API Contract Tests","API Consistency"],"duration":739,"failureMessages":[],"fullName":"API Contract Tests API Consistency should have consistent authority references","status":"passed","title":"should have consistent authority references"},{"ancestorTitles":["API Contract Tests","API Consistency"],"duration":147,"failureMessages":[],"fullName":"API Contract Tests API Consistency should maintain data consistency across endpoints","status":"passed","title":"should maintain data consistency across endpoints"},{"ancestorTitles":["API Contract Tests","Response Headers Validation"],"duration":968,"failureMessages":[],"fullName":"API Contract Tests Response Headers Validation should have correct content-type headers","status":"passed","title":"should have correct content-type headers"},{"ancestorTitles":["API Contract Tests","Response Headers Validation"],"duration":146,"failureMessages":[],"fullName":"API Contract Tests Response Headers Validation should have CORS headers","status":"passed","title":"should have CORS headers"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\integration\\compliance.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Jest worker encountered 4 child process exceptions, exceeding retry limit\n\n      \u001b[2mat ChildProcessWorker.initialize (\u001b[22mnode_modules/jest-worker/build/workers/ChildProcessWorker.js\u001b[2m:181:21)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.py","main_azure_simple.py","!src/test/**","!**/node_modules/**"],"coverageDirectory":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":4,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-junit\\index.js",{}],["C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./coverage/html-report","filename":"report.html","expand":true}]],"rootDir":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests","runTestsByPath":false,"seed":1396218452,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\lelem\\Documents\\github\\projetoAviacao\\tests\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759980332708,"_reporterOptions":{"publicPath":"./coverage/html-report","filename":"report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})